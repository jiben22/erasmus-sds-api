swagger: "2.0"
info:
  description: "Courses for Erasmus+ Students (CES)"
  version: "1.0.0"
  title: "CES - Software Developement Studio 2"
basePath: "/v1"
tags:
  - name: "faculties"
    description: "Everything about faculties"
  - name: "profiles"
    description: "Operations about profile"
schemes:
  - "https"
  - "http"
paths:
  /faculties:
    get:
      tags:
        - "faculties"
      summary: "Find faculties"
      description: "Returns all the faculties"
      operationId: "getFaculties"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
  /faculties/{facultyId}/courses:
    get:
      tags:
        - "faculties"
      summary: "Find courses by faculty ID"
      description: "Returns all the courses of a specific faculty"
      operationId: "getCoursesByFacultyId"
      produces:
        - "application/json"
      parameters:
        - name: "facultyId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - name: "diploma"
          in: "query"
          description: "Diploma to filter by"
          required: false
          type: "string"
          items:
            type: "string"
            enum:
              - "bsc"
              - "master"
              - "phd"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Faculty not found"
  /faculties/{facultyId}/courses/{courseId}:
    get:
      tags:
        - "faculties"
      summary: "Find a course by ID from a specific faculty"
      description: "Return a single course from its faculty"
      operationId: "getCourseById"
      produces:
        - "application/json"
      parameters:
        - name: "facultyId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - name: "courseId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Course not found"
  /user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "Create an Erasmus+ candidate account"
      operationId: "createUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
  /user/login:
    get:
      tags:
        - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "username"
          in: "query"
          description: "The user name for login"
          required: true
          type: "string"
        - name: "password"
          in: "query"
          description: "The password for login in clear text"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
        - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /user/{userId}:
    get:
      tags:
        - "user"
      summary: "Get user by user id"
      description: ""
      operationId: "getUserById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid Id supplied"
        "404":
          description: "User not found"
    put:
      tags:
        - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
    delete:
      tags:
        - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
          description: "Invalid Id supplied"
        "404":
          description: "User not found"
  /user/{userId}/learningAgreement:
    get:
      tags:
        - "user"
      summary: "Get user learningAgreement by user id"
      description: ""
      operationId: "getLearningAgreementUserById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid Id supplied"
        "404":
          description: "User not found"
    put:
      tags:
        - "user"
      summary: "Updated learningAgreement"
      description: "This can only be done by the logged in user."
      operationId: "updatelearningAgreement"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
    delete:
      tags:
        - "user"
      summary: "Delete learningAgreement"
      description: "This can only be done by the logged in user."
      operationId: "deletelearningAgreement"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
          description: "Invalid Id supplied"
        "404":
          description: "User not found"
definitions:
  Faculty:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      image:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"